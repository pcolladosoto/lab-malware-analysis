; Management System

; %include "../libs/io_v6.asm"
%include "user_stuff.asm"

global main

section .data

; Note that by inspecting any ASCII table we see how:
    ; + ---------------------------------------------------- +
    ; | Special Character     --   Dec Value   --  Hex Value |
    ; | Horizontal Tab (HT)   --      9        --    0x9     |
    ; | Newline/Linefeed (LF) --      10       --    0xA     |
    ; |        NULL           --      0        --    0x0     |

menu_str:
    db "Menu:", 0xA, \
        0x9, " 1. Add user", 0xA, \
        0x9, " 2. Delete user", 0xA, \
        0x9, " 3. Search for user", 0xA, \
        0x9, " 4. List all users", 0xA, \
        0x9, " 5. Count users", 0xA, \
        0x9, " 6. Add computer", 0xA, \
        0x9, " 7. Delete computer", 0xA, \
        0x9, " 8. Search for computer", 0xA, \
        0x9, " 9. List all computers", 0xA, \
        0x9, "10. Exit", 0xA, \
        "Please enter an option --> ", 0x0

reply:
    db "Given option --> ", 0x0

section .text

main:
    ; We have these three lines for compatability reasons
    push rbp
    mov rbp, rsp
    sub rsp, 32

.menu:
    ; Load up the message to ask for a number
    mov rdi, QWORD menu_str
    call print_string_new

    ; Read the option
    call read_int_new
    ; push rax

    ; Echo the option back to the user
    ; mov rdi, QWORD reply
    ; call print_string_new
    ; pop rdi
    ; call print_int_new
    ; call print_nl_new

    cmp rax, 1
        je .add_usr
    cmp rax, 2
        je .del_usr ; If we jump we aren't pushing EIP into the stack and ret throws us into nowhere!

.end:
    call clear_screen
    ; Restoring the initial state (compatibility stuff)
    add rsp, 32
    pop rbp

    ret

.add_usr:
    call add_user
    jmp .menu

.del_usr:
    call del_user
    jmp .menu
