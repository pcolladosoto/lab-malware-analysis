global main

section .data

bash db "/bin/bash", 0x0

cls db "/mw_repo/Cw_1_management_system/bin/cls", 0x0

tput_exec:
    db "/usr/bin/tput", 0x0

tput_arga:
    db "-Txterm", 0x0

tput_argb:
    db "clear", 0x0

tput_args:
    db "tput", 0x0, "-T", 0x0, "xterm", 0x0, "clear", 0x0

section .text

main:
    push rbp
    mov rbp, rsp
    sub rsp, 0x38

    ; lea rax, [tput_exec]
    ; mov [rbp - 16], rax
    ; lea rax, [tput_arga]
    ; mov [rbp - 12], rax
    ; lea rax, [tput_argb]
    ; mov [rbp - 8], rax

    xor rax, rax
    ; lea rax, [cls]
    ; mov QWORD [rbp - 0x38], cls
    lea rax, [tput_exec]
    mov QWORD [rbp - 0x28], rax
    lea rax, [tput_arga]
    mov QWORD [rbp - 0x20], rax
    lea rax, [tput_argb]
    mov QWORD [rbp - 0x18], rax
    mov QWORD [rbp - 0x10], 0
    mov QWORD [rbp - 0x30], 0

    lea rdx, [rbp - 0x30]
    lea rax, [rbp - 0x28]
    mov rsi, rax
    lea rdi, [tput_exec]

    ; mov rax, 0
    ; mov [rbp - 4], rax
    ; mov rax, 0
    ; push rax
    ; mov rax, tput_argb
    ; push rax
    ; mov rax, tput_arga
    ; push rax
    ; mov rax, tput_exec
    ; push rax

    ; lea rsi, [tput_args]
    ; lea rdi, [tput_exec]
    ; mov rdx, 0
    mov rax, 11
    ; lea rbx, [tput_exec]
    ; lea rcx, [rbp - 0x28]
    ; mov rdx, 0

    ; mov rax, 11
    ; lea rbx, [rbp - 0x38]
    ; lea rbx, [cls]
    ; lea rcx, [rbp - 16]
    ; mov rcx, 0
    ; mov rdx, 0
    int 0x80
    ; Exit!
    ; mov rax, 1
    ; mov rbx, 0
    ; int 0x80
    jmp .cend

.cend:
    ; Return zero if everything went well
    xor rax, rax
    ; pop rbx
    ; pop rcx
    ; pop rdx
    ; pop rdi

    ; Reset everything to the way it was
    add rsp, 0x38
    pop rbp
    ret